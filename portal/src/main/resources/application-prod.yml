spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/portal
    username: ${POSTGRES_USERNAME:surfyn}
    password: ${POSTGRES_PASSWORD:psurfyn}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimumIdle: 10
      idleTimeout: 60000
      maximumPoolSize: 100
      connectionTimeout: 30000
  jta:
    enabled: false

  jpa:
    show_sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        #  generate_statistics: true
        #  format_sql: true
        temp:
          use_jdbc_metadata_defaults: false

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_SECURITY_OAUTH2_CLIENT_ID:5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com}
            clientSecret: ${GOOGLE_SECURITY_OAUTH2_CLIENT_SECRET:tWZKVLxaD_ARWsriiiUFYoIk}
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: ${FACEBOOK_SECURITY_OAUTH2_CLIENT_ID:121189305185277}
            clientSecret: ${FACEBOOK_SECURITY_OAUTH2_CLIENT_SECRET:42ffe5aa7379e8326387e0fe16f34132}
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

app:
  oauth2:
    # After successfully authenticating with the OAuth2 Provider
    authorizedRedirectUris:
      - ${APP_OAUTH2_AUTHORIZED_REDIRECT_URI:http://localhost:8080/oauth2/redirect}